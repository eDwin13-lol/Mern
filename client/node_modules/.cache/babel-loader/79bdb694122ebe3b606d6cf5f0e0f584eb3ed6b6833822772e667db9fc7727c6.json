{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const fetchPosts = async (skip = 0, limit = 20, source = null) => {\n  try {\n    const params = {\n      skip,\n      limit\n    };\n    if (source) params.source = source;\n    const response = await axios.get(`${API_BASE_URL}/posts`, {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching posts:', error);\n    throw error;\n  }\n};\nexport const refreshFeed = async () => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/posts/refresh`);\n    return response.data;\n  } catch (error) {\n    console.error('Error refreshing feed:', error);\n    throw error;\n  }\n};\nexport const fetchPostsBySource = async (source, skip = 0, limit = 20) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/posts/source/${source}`, {\n      params: {\n        skip,\n        limit\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching posts by source:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","fetchPosts","skip","limit","source","params","response","get","data","error","console","refreshFeed","post","fetchPostsBySource"],"sources":["/workspaces/Mern/client/src/api/postService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nexport const fetchPosts = async (skip = 0, limit = 20, source = null) => {\n  try {\n    const params = { skip, limit };\n    if (source) params.source = source;\n\n    const response = await axios.get(`${API_BASE_URL}/posts`, { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching posts:', error);\n    throw error;\n  }\n};\n\nexport const refreshFeed = async () => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/posts/refresh`);\n    return response.data;\n  } catch (error) {\n    console.error('Error refreshing feed:', error);\n    throw error;\n  }\n};\n\nexport const fetchPostsBySource = async (source, skip = 0, limit = 20) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/posts/source/${source}`, {\n      params: { skip, limit },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching posts by source:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,IAAI,KAAK;EACvE,IAAI;IACF,MAAMC,MAAM,GAAG;MAAEH,IAAI;MAAEC;IAAM,CAAC;IAC9B,IAAIC,MAAM,EAAEC,MAAM,CAACD,MAAM,GAAGA,MAAM;IAElC,MAAME,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,QAAQ,EAAE;MAAEQ;IAAO,CAAC,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMV,KAAK,CAACgB,IAAI,CAAC,GAAGf,YAAY,gBAAgB,CAAC;IAClE,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAG,MAAAA,CAAOT,MAAM,EAAEF,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK;EACxE,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,iBAAiBO,MAAM,EAAE,EAAE;MACzEC,MAAM,EAAE;QAAEH,IAAI;QAAEC;MAAM;IACxB,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}