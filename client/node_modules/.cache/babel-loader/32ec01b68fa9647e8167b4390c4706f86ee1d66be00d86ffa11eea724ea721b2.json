{"ast":null,"code":"var _jsxFileName = \"/workspaces/Mern/client/src/pages/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport PostCard from '../components/PostCard';\nimport SourceFilter from '../components/SourceFilter';\nimport { fetchPosts, fetchPostsBySource, refreshFeed } from '../api/postService';\nimport './Feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Feed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasMore, setHasMore] = useState(true);\n  const [skip, setSkip] = useState(0);\n  const [source, setSource] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const {\n    ref: endRef,\n    inView\n  } = useInView({\n    threshold: 0.1\n  });\n  const initialFetchDone = useRef(false);\n  const LIMIT = 20;\n\n  // Initial load\n  useEffect(() => {\n    if (!initialFetchDone.current) {\n      initialFetchDone.current = true;\n      loadInitialPosts();\n    }\n  }, []);\n\n  // Load more when scroll reaches end\n  useEffect(() => {\n    if (inView && hasMore && !loading) {\n      loadMorePosts();\n    }\n  }, [inView, hasMore, loading]);\n  const loadInitialPosts = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await fetchPosts(0, LIMIT, source);\n      setPosts(data.data);\n      setSkip(LIMIT);\n      setHasMore(data.pagination.hasMore);\n    } catch (err) {\n      setError('Failed to load posts');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMorePosts = async () => {\n    setLoading(true);\n    try {\n      let data;\n      if (source) {\n        data = await fetchPostsBySource(source, skip, LIMIT);\n      } else {\n        data = await fetchPosts(skip, LIMIT, source);\n      }\n      setPosts(prev => [...prev, ...data.data]);\n      setSkip(prev => prev + LIMIT);\n      setHasMore(data.pagination.hasMore);\n    } catch (err) {\n      console.error('Error loading more posts:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSourceChange = newSource => {\n    setSource(newSource);\n    setPosts([]);\n    setSkip(0);\n    setHasMore(true);\n    initialFetchDone.current = false;\n  };\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    try {\n      await refreshFeed();\n      // Reload the feed\n      setPosts([]);\n      setSkip(0);\n      setHasMore(true);\n      initialFetchDone.current = false;\n      loadInitialPosts();\n    } catch (err) {\n      setError('Failed to refresh feed');\n      console.error(err);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edgram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-btn\",\n        onClick: handleRefresh,\n        disabled: refreshing,\n        children: refreshing ? '‚è≥ Refreshing...' : 'üîÑ Refresh Feed'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SourceFilter, {\n      currentSource: source,\n      onSourceChange: handleSourceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: [posts.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts available. Try refreshing!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: endRef,\n      className: \"load-more-trigger\",\n      children: loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), !hasMore && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"end-message\",\n      children: \"\\u2713 No more posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"Eitsnmd/7hpu6/ZJW3vbpHJoyjk=\", false, function () {\n  return [useInView];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useInView","PostCard","SourceFilter","fetchPosts","fetchPostsBySource","refreshFeed","jsxDEV","_jsxDEV","Feed","_s","posts","setPosts","loading","setLoading","error","setError","hasMore","setHasMore","skip","setSkip","source","setSource","refreshing","setRefreshing","ref","endRef","inView","threshold","initialFetchDone","LIMIT","current","loadInitialPosts","loadMorePosts","data","pagination","err","console","prev","handleSourceChange","newSource","handleRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","currentSource","onSourceChange","length","map","post","_id","_c","$RefreshReg$"],"sources":["/workspaces/Mern/client/src/pages/Feed.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport PostCard from '../components/PostCard';\nimport SourceFilter from '../components/SourceFilter';\nimport { fetchPosts, fetchPostsBySource, refreshFeed } from '../api/postService';\nimport './Feed.css';\n\nexport const Feed = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasMore, setHasMore] = useState(true);\n  const [skip, setSkip] = useState(0);\n  const [source, setSource] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const { ref: endRef, inView } = useInView({ threshold: 0.1 });\n  const initialFetchDone = useRef(false);\n\n  const LIMIT = 20;\n\n  // Initial load\n  useEffect(() => {\n    if (!initialFetchDone.current) {\n      initialFetchDone.current = true;\n      loadInitialPosts();\n    }\n  }, []);\n\n  // Load more when scroll reaches end\n  useEffect(() => {\n    if (inView && hasMore && !loading) {\n      loadMorePosts();\n    }\n  }, [inView, hasMore, loading]);\n\n  const loadInitialPosts = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await fetchPosts(0, LIMIT, source);\n      setPosts(data.data);\n      setSkip(LIMIT);\n      setHasMore(data.pagination.hasMore);\n    } catch (err) {\n      setError('Failed to load posts');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMorePosts = async () => {\n    setLoading(true);\n    try {\n      let data;\n      if (source) {\n        data = await fetchPostsBySource(source, skip, LIMIT);\n      } else {\n        data = await fetchPosts(skip, LIMIT, source);\n      }\n\n      setPosts((prev) => [...prev, ...data.data]);\n      setSkip((prev) => prev + LIMIT);\n      setHasMore(data.pagination.hasMore);\n    } catch (err) {\n      console.error('Error loading more posts:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSourceChange = (newSource) => {\n    setSource(newSource);\n    setPosts([]);\n    setSkip(0);\n    setHasMore(true);\n    initialFetchDone.current = false;\n  };\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    try {\n      await refreshFeed();\n      // Reload the feed\n      setPosts([]);\n      setSkip(0);\n      setHasMore(true);\n      initialFetchDone.current = false;\n      loadInitialPosts();\n    } catch (err) {\n      setError('Failed to refresh feed');\n      console.error(err);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  return (\n    <div className=\"feed-container\">\n      <div className=\"feed-header\">\n        <h1>Edgram</h1>\n        <button\n          className=\"refresh-btn\"\n          onClick={handleRefresh}\n          disabled={refreshing}\n        >\n          {refreshing ? '‚è≥ Refreshing...' : 'üîÑ Refresh Feed'}\n        </button>\n      </div>\n\n      <SourceFilter currentSource={source} onSourceChange={handleSourceChange} />\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <div className=\"posts-list\">\n        {posts.length === 0 && !loading && (\n          <div className=\"empty-state\">\n            <p>No posts available. Try refreshing!</p>\n          </div>\n        )}\n\n        {posts.map((post) => (\n          <PostCard key={post._id} post={post} />\n        ))}\n      </div>\n\n      {hasMore && (\n        <div ref={endRef} className=\"load-more-trigger\">\n          {loading && <div className=\"spinner\">Loading...</div>}\n        </div>\n      )}\n\n      {!hasMore && posts.length > 0 && (\n        <div className=\"end-message\">‚úì No more posts</div>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}