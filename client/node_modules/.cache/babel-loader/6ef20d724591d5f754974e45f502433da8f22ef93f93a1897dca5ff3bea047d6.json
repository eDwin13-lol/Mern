{"ast":null,"code":"var _jsxFileName = \"/workspaces/Mern/client/src/components/PostCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PostCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostCard = ({\n  post\n}) => {\n  _s();\n  const isReddit = post.source === 'reddit';\n  const isYoutube = post.source === 'youtube';\n  const [showFullSize, setShowFullSize] = useState(false);\n\n  // Extract YouTube video ID from URL\n  const getYouTubeVideoId = url => {\n    const match = url === null || url === void 0 ? void 0 : url.match(/(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&\\n?#]+)/);\n    return match ? match[1] : null;\n  };\n  const youtubeVideoId = isYoutube ? getYouTubeVideoId(post.url) : null;\n  const handleTitleClick = e => {\n    e.stopPropagation();\n    window.open(post.url, '_blank');\n  };\n  if (showFullSize && isYoutube && youtubeVideoId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-fullscreen\",\n        onClick: () => setShowFullSize(false),\n        children: \"\\u2715 Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube-embed-fullscreen\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"100%\",\n          src: `https://www.youtube.com/embed/${youtubeVideoId}?autoplay=1&mute=1&controls=1`,\n          title: post.title,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-card\",\n    children: [isYoutube && youtubeVideoId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-video-embed\",\n      onClick: e => {\n        e.stopPropagation();\n        setShowFullSize(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube-embed-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"100%\",\n          src: `https://www.youtube.com/embed/${youtubeVideoId}?autoplay=1&mute=1&controls=0&modestbranding=1`,\n          title: post.title,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expand-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"expand-btn\",\n          children: \"\\u26F6 Expand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : post.thumbnail && post.thumbnail !== 'self' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-thumbnail\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.thumbnail,\n        alt: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post-title\",\n        onClick: handleTitleClick,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), post.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-description\",\n        children: [post.description.substring(0, 150), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `source-badge ${post.source}`,\n          children: [isReddit && '🔥 Reddit', isYoutube && '▶ YouTube']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-stats\",\n          children: [isReddit && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat\",\n            children: [\"\\uD83D\\uDC4D \", (post.score / 1000).toFixed(1), \"k\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), isYoutube && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat\",\n            children: [\"\\uD83D\\uDC40 \", (post.views / 1000).toFixed(1), \"k views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-author\",\n          children: [\"by \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCard, \"FxQJIRPRxtwKldTqntryfyu6Hco=\");\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostCard","post","_s","isReddit","source","isYoutube","showFullSize","setShowFullSize","getYouTubeVideoId","url","match","youtubeVideoId","handleTitleClick","e","stopPropagation","window","open","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","src","title","frameBorder","allow","allowFullScreen","thumbnail","alt","description","substring","score","toFixed","views","author","_c","$RefreshReg$"],"sources":["/workspaces/Mern/client/src/components/PostCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './PostCard.css';\n\nexport const PostCard = ({ post }) => {\n  const isReddit = post.source === 'reddit';\n  const isYoutube = post.source === 'youtube';\n  const [showFullSize, setShowFullSize] = useState(false);\n\n  // Extract YouTube video ID from URL\n  const getYouTubeVideoId = (url) => {\n    const match = url?.match(/(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&\\n?#]+)/);\n    return match ? match[1] : null;\n  };\n\n  const youtubeVideoId = isYoutube ? getYouTubeVideoId(post.url) : null;\n\n  const handleTitleClick = (e) => {\n    e.stopPropagation();\n    window.open(post.url, '_blank');\n  };\n\n  if (showFullSize && isYoutube && youtubeVideoId) {\n    return (\n      <div className=\"post-card-fullscreen\">\n        <button \n          className=\"close-fullscreen\"\n          onClick={() => setShowFullSize(false)}\n        >\n          ✕ Close\n        </button>\n        <div className=\"youtube-embed-fullscreen\">\n          <iframe\n            width=\"100%\"\n            height=\"100%\"\n            src={`https://www.youtube.com/embed/${youtubeVideoId}?autoplay=1&mute=1&controls=1`}\n            title={post.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"post-card\">\n      {/* Video Embed Section */}\n      {isYoutube && youtubeVideoId ? (\n        <div \n          className=\"post-video-embed\"\n          onClick={(e) => {\n            e.stopPropagation();\n            setShowFullSize(true);\n          }}\n        >\n          <div className=\"youtube-embed-container\">\n            <iframe\n              width=\"100%\"\n              height=\"100%\"\n              src={`https://www.youtube.com/embed/${youtubeVideoId}?autoplay=1&mute=1&controls=0&modestbranding=1`}\n              title={post.title}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n          </div>\n          <div className=\"expand-overlay\">\n            <button className=\"expand-btn\">⛶ Expand</button>\n          </div>\n        </div>\n      ) : post.thumbnail && post.thumbnail !== 'self' ? (\n        <div className=\"post-thumbnail\">\n          <img src={post.thumbnail} alt={post.title} />\n        </div>\n      ) : null}\n\n      <div className=\"post-content\">\n        <h3 className=\"post-title\" onClick={handleTitleClick}>\n          {post.title}\n        </h3>\n\n        {post.description && (\n          <p className=\"post-description\">{post.description.substring(0, 150)}...</p>\n        )}\n\n        <div className=\"post-footer\">\n          <span className={`source-badge ${post.source}`}>\n            {isReddit && '🔥 Reddit'}\n            {isYoutube && '▶ YouTube'}\n          </span>\n\n          <div className=\"post-stats\">\n            {isReddit && (\n              <span className=\"stat\">\n                👍 {(post.score / 1000).toFixed(1)}k\n              </span>\n            )}\n            {isYoutube && (\n              <span className=\"stat\">\n                👀 {(post.views / 1000).toFixed(1)}k views\n              </span>\n            )}\n          </div>\n\n          <span className=\"post-author\">by {post.author}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}